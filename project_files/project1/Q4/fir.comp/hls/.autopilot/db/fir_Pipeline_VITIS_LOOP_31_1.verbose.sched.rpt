

================================================================
== Vitis HLS Report for 'fir_Pipeline_VITIS_LOOP_31_1'
================================================================
* Date:           Tue Oct 14 17:42:44 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        fir.comp
* Solution:       hls (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.912 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |      132|      132|  1.320 us|  1.320 us|  127|  127|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_31_1  |      130|      130|         5|          1|          1|   127|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 1, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.71>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%i1 = alloca i32 1"   --->   Operation 8 'alloca' 'i1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%acc3 = alloca i32 1"   --->   Operation 9 'alloca' 'acc3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 0, i32 %acc3"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 11 [1/1] (1.58ns)   --->   "%store_ln0 = store i7 127, i7 %i1"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc.split"   --->   Operation 12 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%i1_load = load i7 %i1" [fir.cpp:33]   --->   Operation 13 'load' 'i1_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%zext_ln31 = zext i7 %i1_load" [fir.cpp:31]   --->   Operation 14 'zext' 'zext_ln31' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (1.87ns)   --->   "%i = add i7 %i1_load, i7 127" [fir.cpp:33]   --->   Operation 15 'add' 'i' <Predicate = true> <Delay = 1.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln33 = zext i7 %i" [fir.cpp:33]   --->   Operation 16 'zext' 'zext_ln33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%shift_reg_addr = getelementptr i32 %shift_reg, i64 0, i64 %zext_ln33" [fir.cpp:33]   --->   Operation 17 'getelementptr' 'shift_reg_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [2/2] (3.25ns)   --->   "%shift_reg_load = load i7 %shift_reg_addr" [fir.cpp:33]   --->   Operation 18 'load' 'shift_reg_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 128> <RAM>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%fir_int_int_c_addr = getelementptr i32 %fir_int_int_c, i64 0, i64 %zext_ln31" [fir.cpp:34]   --->   Operation 19 'getelementptr' 'fir_int_int_c_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [2/2] (3.25ns)   --->   "%fir_int_int_c_load = load i7 %fir_int_int_c_addr" [fir.cpp:34]   --->   Operation 20 'load' 'fir_int_int_c_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 128> <ROM>
ST_1 : Operation 21 [1/1] (1.87ns)   --->   "%icmp_ln31 = icmp_eq  i7 %i, i7 0" [fir.cpp:31]   --->   Operation 21 'icmp' 'icmp_ln31' <Predicate = true> <Delay = 1.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.87> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (1.58ns)   --->   "%store_ln33 = store i7 %i, i7 %i1" [fir.cpp:33]   --->   Operation 22 'store' 'store_ln33' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%br_ln31 = br i1 %icmp_ln31, void %for.inc.split, void %for.end.exitStub" [fir.cpp:31]   --->   Operation 23 'br' 'br_ln31' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 6.50>
ST_2 : Operation 24 [1/2] ( I:3.25ns O:3.25ns )   --->   "%shift_reg_load = load i7 %shift_reg_addr" [fir.cpp:33]   --->   Operation 24 'load' 'shift_reg_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 128> <RAM>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%shift_reg_addr_1 = getelementptr i32 %shift_reg, i64 0, i64 %zext_ln31" [fir.cpp:33]   --->   Operation 25 'getelementptr' 'shift_reg_addr_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] ( I:3.25ns O:3.25ns )   --->   "%store_ln33 = store i32 %shift_reg_load, i7 %shift_reg_addr_1" [fir.cpp:33]   --->   Operation 26 'store' 'store_ln33' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 128> <RAM>
ST_2 : Operation 27 [1/2] ( I:3.25ns O:3.25ns )   --->   "%fir_int_int_c_load = load i7 %fir_int_int_c_addr" [fir.cpp:34]   --->   Operation 27 'load' 'fir_int_int_c_load' <Predicate = true> <Delay = 3.25> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 128> <ROM>

State 3 <SV = 2> <Delay = 6.91>
ST_3 : Operation 28 [2/2] (6.91ns)   --->   "%mul_ln34 = mul i32 %fir_int_int_c_load, i32 %shift_reg_load" [fir.cpp:34]   --->   Operation 28 'mul' 'mul_ln34' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.91>
ST_4 : Operation 29 [1/2] (6.91ns)   --->   "%mul_ln34 = mul i32 %fir_int_int_c_load, i32 %shift_reg_load" [fir.cpp:34]   --->   Operation 29 'mul' 'mul_ln34' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 4.14>
ST_5 : Operation 30 [1/1] (0.00ns)   --->   "%acc3_load = load i32 %acc3" [fir.cpp:34]   --->   Operation 30 'load' 'acc3_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 31 [1/1] (0.00ns)   --->   "%specpipeline_ln26 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_0" [fir.cpp:26]   --->   Operation 31 'specpipeline' 'specpipeline_ln26' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 32 [1/1] (0.00ns)   --->   "%speclooptripcount_ln26 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 127, i64 127, i64 127" [fir.cpp:26]   --->   Operation 32 'speclooptripcount' 'speclooptripcount_ln26' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 33 [1/1] (0.00ns)   --->   "%specloopname_ln31 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [fir.cpp:31]   --->   Operation 33 'specloopname' 'specloopname_ln31' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 34 [1/1] (2.55ns)   --->   "%acc = add i32 %mul_ln34, i32 %acc3_load" [fir.cpp:34]   --->   Operation 34 'add' 'acc' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 35 [1/1] (1.58ns)   --->   "%store_ln34 = store i32 %acc, i32 %acc3" [fir.cpp:34]   --->   Operation 35 'store' 'store_ln34' <Predicate = true> <Delay = 1.58>
ST_5 : Operation 36 [1/1] (0.00ns)   --->   "%write_ln34 = write void @_ssdm_op_Write.ap_auto.i32P0A, i32 %acc_2_out, i32 %acc" [fir.cpp:34]   --->   Operation 36 'write' 'write_ln34' <Predicate = (icmp_ln31)> <Delay = 0.00>
ST_5 : Operation 37 [1/1] (1.58ns)   --->   "%ret_ln0 = ret"   --->   Operation 37 'ret' 'ret_ln0' <Predicate = (icmp_ln31)> <Delay = 1.58>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 6.712ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln0') of constant 127 on local variable 'i1' [7]  (1.588 ns)
	'load' operation 7 bit ('i1_load', fir.cpp:33) on local variable 'i1' [10]  (0.000 ns)
	'add' operation 7 bit ('i', fir.cpp:33) [16]  (1.870 ns)
	'getelementptr' operation 7 bit ('shift_reg_addr', fir.cpp:33) [18]  (0.000 ns)
	'load' operation 32 bit ('shift_reg_load', fir.cpp:33) on array 'shift_reg' [19]  (3.254 ns)

 <State 2>: 6.508ns
The critical path consists of the following:
	'load' operation 32 bit ('shift_reg_load', fir.cpp:33) on array 'shift_reg' [19]  (3.254 ns)
	'store' operation 0 bit ('store_ln33', fir.cpp:33) of variable 'shift_reg_load', fir.cpp:33 on array 'shift_reg' [21]  (3.254 ns)

 <State 3>: 6.912ns
The critical path consists of the following:
	'mul' operation 32 bit ('mul_ln34', fir.cpp:34) [24]  (6.912 ns)

 <State 4>: 6.912ns
The critical path consists of the following:
	'mul' operation 32 bit ('mul_ln34', fir.cpp:34) [24]  (6.912 ns)

 <State 5>: 4.140ns
The critical path consists of the following:
	'load' operation 32 bit ('acc3_load', fir.cpp:34) on local variable 'acc3' [11]  (0.000 ns)
	'add' operation 32 bit ('acc', fir.cpp:34) [25]  (2.552 ns)
	'store' operation 0 bit ('store_ln34', fir.cpp:34) of variable 'acc', fir.cpp:34 on local variable 'acc3' [27]  (1.588 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
