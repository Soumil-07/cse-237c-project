-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity fir_fir_Pipeline_VITIS_LOOP_31_1_fir_int_int_c_ROM_AUTO_1R is 
    generic(
             DataWidth     : integer := 32; 
             AddressWidth     : integer := 7; 
             AddressRange    : integer := 128
    ); 
    port (
 
          address0        : in std_logic_vector(AddressWidth-1 downto 0); 
          ce0             : in std_logic; 
          q0              : out std_logic_vector(DataWidth-1 downto 0);

          reset               : in std_logic;
          clk                 : in std_logic
    ); 
end entity; 


architecture rtl of fir_fir_Pipeline_VITIS_LOOP_31_1_fir_int_int_c_ROM_AUTO_1R is 
 
signal address0_tmp : std_logic_vector(AddressWidth-1 downto 0); 

type mem_array is array (0 to AddressRange-1) of std_logic_vector (DataWidth-1 downto 0); 

signal mem0 : mem_array := (
    0 => "00000000000000000000000000001010", 1 => "00000000000000000000000000001011", 2 => "00000000000000000000000000001011", 3 => "00000000000000000000000000001000", 
    4 => "00000000000000000000000000000011", 5 => "11111111111111111111111111111101", 6 => "11111111111111111111111111111000", 7 => "11111111111111111111111111110101", 
    8 => "11111111111111111111111111110101", 9 => "11111111111111111111111111110110", 10 => "11111111111111111111111111110110", 11 => "11111111111111111111111111110110", 
    12 => "11111111111111111111111111110110", 13 => "11111111111111111111111111110110", 14 => "11111111111111111111111111110110", 15 => "11111111111111111111111111110110", 
    16 => "11111111111111111111111111110110", 17 => "11111111111111111111111111110110", 18 => "11111111111111111111111111110110", 19 => "11111111111111111111111111110110", 
    20 => "11111111111111111111111111110110", 21 => "11111111111111111111111111110110", 22 => "11111111111111111111111111110110", 23 => "11111111111111111111111111110110", 
    24 => "11111111111111111111111111110110", 25 => "11111111111111111111111111110110", 26 => "11111111111111111111111111110110", 27 => "11111111111111111111111111110110", 
    28 => "11111111111111111111111111110110", 29 => "11111111111111111111111111110110", 30 => "11111111111111111111111111110110", 31 => "11111111111111111111111111110110", 
    32 => "11111111111111111111111111110110", 33 => "11111111111111111111111111110101", 34 => "11111111111111111111111111110101", 35 => "11111111111111111111111111111000", 
    36 => "11111111111111111111111111111101", 37 => "00000000000000000000000000000011", 38 => "00000000000000000000000000001000", 39 => "00000000000000000000000000001011", 
    40 => "00000000000000000000000000001011", 41 => "00000000000000000000000000001010", 42 => "00000000000000000000000000001010", 43 => "00000000000000000000000000001010", 
    44 => "00000000000000000000000000001010", 45 => "00000000000000000000000000001010", 46 => "00000000000000000000000000001010", 47 => "00000000000000000000000000001010", 
    48 => "00000000000000000000000000001010", 49 => "00000000000000000000000000001011", 50 => "00000000000000000000000000001011", 51 => "00000000000000000000000000001000", 
    52 => "00000000000000000000000000000011", 53 => "11111111111111111111111111111101", 54 => "11111111111111111111111111111000", 55 => "11111111111111111111111111110101", 
    56 => "11111111111111111111111111110101", 57 => "11111111111111111111111111110110", 58 => "11111111111111111111111111110110", 59 => "11111111111111111111111111110110", 
    60 => "11111111111111111111111111110110", 61 => "11111111111111111111111111110110", 62 => "11111111111111111111111111110110", 63 => "11111111111111111111111111110110", 
    64 => "11111111111111111111111111110110", 65 => "11111111111111111111111111110101", 66 => "11111111111111111111111111110101", 67 => "11111111111111111111111111111000", 
    68 => "11111111111111111111111111111101", 69 => "00000000000000000000000000000011", 70 => "00000000000000000000000000001000", 71 => "00000000000000000000000000001011", 
    72 => "00000000000000000000000000001011", 73 => "00000000000000000000000000001010", 74 => "00000000000000000000000000001010", 75 => "00000000000000000000000000001010", 
    76 => "00000000000000000000000000001010", 77 => "00000000000000000000000000001010", 78 => "00000000000000000000000000001010", 79 => "00000000000000000000000000001010", 
    80 => "00000000000000000000000000001010", 81 => "00000000000000000000000000001011", 82 => "00000000000000000000000000001011", 83 => "00000000000000000000000000001000", 
    84 => "00000000000000000000000000000011", 85 => "11111111111111111111111111111101", 86 => "11111111111111111111111111111000", 87 => "11111111111111111111111111110101", 
    88 => "11111111111111111111111111110101", 89 => "11111111111111111111111111110110", 90 => "11111111111111111111111111110110", 91 => "11111111111111111111111111110110", 
    92 => "11111111111111111111111111110110", 93 => "11111111111111111111111111110110", 94 => "11111111111111111111111111110110", 95 => "11111111111111111111111111110110", 
    96 => "11111111111111111111111111110110", 97 => "11111111111111111111111111110101", 98 => "11111111111111111111111111110101", 99 => "11111111111111111111111111111000", 
    100 => "11111111111111111111111111111101", 101 => "00000000000000000000000000000011", 102 => "00000000000000000000000000001000", 103 => "00000000000000000000000000001011", 
    104 => "00000000000000000000000000001011", 105 => "00000000000000000000000000001010", 106 => "00000000000000000000000000001010", 107 => "00000000000000000000000000001010", 
    108 => "00000000000000000000000000001010", 109 => "00000000000000000000000000001010", 110 => "00000000000000000000000000001010", 111 => "00000000000000000000000000001010", 
    112 => "00000000000000000000000000001010", 113 => "00000000000000000000000000001010", 114 => "00000000000000000000000000001010", 115 => "00000000000000000000000000001010", 
    116 => "00000000000000000000000000001010", 117 => "00000000000000000000000000001010", 118 => "00000000000000000000000000001010", 119 => "00000000000000000000000000001010", 
    120 => "00000000000000000000000000001010", 121 => "00000000000000000000000000001010", 122 => "00000000000000000000000000001010", 123 => "00000000000000000000000000001010", 
    124 => "00000000000000000000000000001010", 125 => "00000000000000000000000000001010", 126 => "00000000000000000000000000001010", 127 => "00000000000000000000000000001010");



begin 

 
memory_access_guard_0: process (address0) 
begin
      address0_tmp <= address0;
--synthesis translate_off
      if (CONV_INTEGER(address0) > AddressRange-1) then
           address0_tmp <= (others => '0');
      else 
           address0_tmp <= address0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
 
        if (ce0 = '1') then  
            q0 <= mem0(CONV_INTEGER(address0_tmp)); 
        end if;

end if;
end process;

end rtl;

